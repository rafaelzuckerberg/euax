{"version":3,"sources":["./src/app/account/change-password/change-password.component.html","./src/app/account/profile-details/profile-details.component.html","./src/app/account/profile/profile.component.html","./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/change-password/change-password.component.css","./src/app/account/change-password/change-password.component.ts","./src/app/account/profile-details/profile-details.component.css","./src/app/account/profile-details/profile-details.component.ts","./src/app/account/profile/profile.component.css","./src/app/account/profile/profile.component.ts"],"names":[],"mappings":"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","file":"account-account-module.js","sourcesContent":["export default \"<form [formGroup]=\\\"form\\\">\\r\\n  <p>Use the form below to change your password.</p>\\r\\n\\r\\n  <div fxLayout=\\\"row\\\">\\r\\n\\r\\n    <div fxFlex=\\\"40%\\\" fxFlex.md=\\\"60%\\\" fxFlex.sm=\\\"50%\\\" fxFlex.xs=\\\"100%\\\">\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput placeholder=\\\"Current Password\\\" formControlName=\\\"currentPassword\\\" [type]=\\\"hideCurrentPassword ? 'password' : 'text'\\\"\\r\\n          autocomplete=\\\"current-password\\\">\\r\\n        <mat-icon matSuffix (click)=\\\"hideCurrentPassword = !hideCurrentPassword\\\">\\r\\n          {{hideCurrentPassword ? 'visibility' : 'visibility_off'}}\\r\\n        </mat-icon>\\r\\n\\r\\n        <mat-error *ngIf=\\\"form.controls['currentPassword'].hasError('required')\\\">\\r\\n          Please enter a your current password\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput placeholder=\\\"New Password\\\" formControlName=\\\"newPassword\\\" [type]=\\\"hideNewPassword ? 'password' : 'text'\\\" autocomplete=\\\"new-password\\\">\\r\\n        <mat-icon matSuffix (click)=\\\"hideNewPassword = !hideNewPassword\\\">\\r\\n          {{hideNewPassword ? 'visibility' : 'visibility_off'}}\\r\\n        </mat-icon>\\r\\n\\r\\n        <mat-error *ngIf=\\\"form.controls['newPassword'].hasError('required')\\\">\\r\\n          Please enter a new password\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput placeholder=\\\"Confirm New Password\\\" formControlName=\\\"newPasswordConfirm\\\" [type]=\\\"hideNewPassword ? 'password' : 'text'\\\"\\r\\n          autocomplete=\\\"new-password\\\">\\r\\n        <mat-icon matSuffix (click)=\\\"hideNewPassword = !hideNewPassword\\\">\\r\\n          {{hideNewPassword ? 'visibility' : 'visibility_off'}}\\r\\n        </mat-icon>\\r\\n\\r\\n        <mat-error *ngIf=\\\"form.controls['newPasswordConfirm'].hasError('required')\\\">\\r\\n          Please confirm your new password\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"form.invalid || disableSubmit\\\" (click)=\\\"changePassword()\\\">Save</button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n<!-- <div class=\\\"password-rules\\\" fxFlex=\\\"65%\\\" fxFlex.sm=\\\"90%\\\" fxFlex.xs=\\\"95%\\\">\\r\\n    Password rules:\\r\\n    <mat-list>\\r\\n      <mat-list-item>\\r\\n        Must be at least 6 characters\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item>\\r\\n        Must contain at least one non alphanumeric character\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item>\\r\\n        Must contain at least one lowercase ('a'-'z')\\r\\n      </mat-list-item>\\r\\n\\r\\n      <mat-list-item>\\r\\n        Must contain at least one uppercase ('A'-'Z')\\r\\n      </mat-list-item>\\r\\n    </mat-list>\\r\\n  </div> -->\"","export default \"<div class=\\\"profile-card\\\">\\r\\n  <img src=\\\"assets/user.png\\\" [alt]=\\\"fullName\\\">\\r\\n\\r\\n  <h2 class=\\\"title\\\">\\r\\n    {{fullName}}\\r\\n  </h2>\\r\\n\\r\\n  <label>\\r\\n    {{alias}}\\r\\n  </label>\\r\\n\\r\\n  <label>\\r\\n    {{email}}\\r\\n  </label>\\r\\n</div>\"","export default \"<div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center none\\\">\\r\\n\\r\\n  <div fxFlex=\\\"95%\\\">\\r\\n\\r\\n    <mat-card>\\r\\n      <mat-card-content>\\r\\n        <h2>My Profile</h2>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxLayout.xs=\\\"column\\\">\\r\\n\\r\\n          <div fxFlex=\\\"30%\\\" fxFlex.sm=\\\"95%\\\" fxFlex.xs=\\\"95%\\\">\\r\\n            <app-profile-details></app-profile-details>\\r\\n          </div>\\r\\n\\r\\n          <div fxFlex></div>\\r\\n\\r\\n          <div fxFlex=\\\"65%\\\" fxFlex.sm=\\\"95%\\\" fxFlex.xs=\\\"950%\\\">\\r\\n\\r\\n\\r\\n            <mat-tab-group>\\r\\n              <mat-tab label=\\\"Change Password\\\">\\r\\n                <app-change-password></app-change-password>\\r\\n              </mat-tab>\\r\\n            </mat-tab-group>\\r\\n\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { LayoutComponent } from '../shared/layout/layout.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    children: [\r\n      { path: 'profile', component: ProfileComponent },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { ProfileDetailsComponent } from './profile-details/profile-details.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    AccountRoutingModule\r\n  ],\r\n  declarations: [ProfileComponent, ChangePasswordComponent, ProfileDetailsComponent],\r\n  exports: [ProfileComponent]\r\n})\r\nexport class AccountModule { }\r\n","export default \".password-rules .mat-divider {\\r\\n    position: unset !important;\\r\\n}\\r\\n.container{\\r\\n    padding-top: 20px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWNjb3VudC9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwwQkFBMEI7QUFDOUI7QUFDQTtJQUNJLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY2hhbmdlLXBhc3N3b3JkL2NoYW5nZS1wYXNzd29yZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhc3N3b3JkLXJ1bGVzIC5tYXQtZGl2aWRlciB7XHJcbiAgICBwb3NpdGlvbjogdW5zZXQgIWltcG9ydGFudDtcclxufVxyXG4uY29udGFpbmVye1xyXG4gICAgcGFkZGluZy10b3A6IDIwcHg7XHJcbn0iXX0= */\"","import { NotificationService } from './../../core/services/notification.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NGXLogger } from 'ngx-logger';\r\n\r\nimport { AuthenticationService } from './../../core/services/auth.service';\r\nimport { SpinnerService } from './../../core/services/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.css']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  hideCurrentPassword: boolean;\r\n  hideNewPassword: boolean;\r\n  currentPassword: string;\r\n  newPassword: string;\r\n  newPasswordConfirm: string;\r\n  disableSubmit: boolean;\r\n\r\n  constructor(private authService: AuthenticationService,\r\n    private logger: NGXLogger,\r\n    private spinnerService: SpinnerService,\r\n    private notificationService: NotificationService) {\r\n\r\n    this.hideCurrentPassword = true;\r\n    this.hideNewPassword = true;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      currentPassword: new FormControl('', Validators.required),\r\n      newPassword: new FormControl('', Validators.required),\r\n      newPasswordConfirm: new FormControl('', Validators.required),\r\n    });\r\n\r\n    this.form.get('currentPassword').valueChanges\r\n      .subscribe(val => { this.currentPassword = val; });\r\n\r\n    this.form.get('newPassword').valueChanges\r\n      .subscribe(val => { this.newPassword = val; });\r\n\r\n    this.form.get('newPasswordConfirm').valueChanges\r\n      .subscribe(val => { this.newPasswordConfirm = val; });\r\n\r\n    this.spinnerService.visibility.subscribe((value) => {\r\n      this.disableSubmit = value;\r\n    });\r\n  }\r\n\r\n  changePassword() {\r\n\r\n    if (this.newPassword !== this.newPasswordConfirm) {\r\n      this.notificationService.openSnackBar('New passwords do not match.');\r\n      return;\r\n    }\r\n\r\n    const email = this.authService.getCurrentUser().email;\r\n\r\n    this.authService.changePassword(email, this.currentPassword, this.newPassword)\r\n      .subscribe(\r\n        data => {\r\n          this.logger.info(`User ${email} changed password.`);\r\n          this.form.reset();\r\n          this.notificationService.openSnackBar('Your password has been changed.');\r\n        },\r\n        error => {\r\n          this.notificationService.openSnackBar(error.error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","export default \".profile-card {\\r\\n    text-align: center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWNjb3VudC9wcm9maWxlLWRldGFpbHMvcHJvZmlsZS1kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7QUFDdEIiLCJmaWxlIjoic3JjL2FwcC9hY2NvdW50L3Byb2ZpbGUtZGV0YWlscy9wcm9maWxlLWRldGFpbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9maWxlLWNhcmQge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../../core/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-details',\r\n  templateUrl: './profile-details.component.html',\r\n  styleUrls: ['./profile-details.component.css']\r\n})\r\nexport class ProfileDetailsComponent implements OnInit {\r\n\r\n  fullName: string;\r\n  email: string;\r\n  alias: string;\r\n\r\n  constructor(private authService: AuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n    this.fullName = this.authService.getCurrentUser().fullName;\r\n    this.email = this.authService.getCurrentUser().email;\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Title } from '../../../../node_modules/@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  constructor(private titleService: Title) { }\r\n\r\n  ngOnInit() {\r\n    this.titleService.setTitle('angular-material-template - Profile');\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}