{"version":3,"sources":["./src/app/users/administrator/create-edit-administrator/create-edit-administrator.component.html","./src/app/users/administrator/details-administrator/details-administrator.component.html","./src/app/users/administrator/list-administrators/list-administrators.component.html","./src/app/shared/services/users/administrator.service.ts","./src/app/users/administrator/administrator-routing.module.ts","./src/app/users/administrator/administrator.module.ts","./src/app/users/administrator/create-edit-administrator/create-edit-administrator.component.css","./src/app/users/administrator/create-edit-administrator/create-edit-administrator.component.ts","./src/app/users/administrator/details-administrator/details-administrator.component.css","./src/app/users/administrator/details-administrator/details-administrator.component.ts","./src/app/users/administrator/list-administrators/list-administrators.component.css","./src/app/users/administrator/list-administrators/list-administrators.component.ts"],"names":[],"mappings":"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","file":"users-administrator-administrator-module.js","sourcesContent":["export default \"<h2>{{ canEdit ? 'Editar' : 'Cadastrar' }} Administradores</h2>\\n\\n<div class=\\\"example-container\\\">\\n\\n    <form [formGroup]=\\\"formG\\\" (ngSubmit)=\\\"submitForm()\\\">\\n        <mat-form-field>\\n            <mat-label>Digite o nome do usuário</mat-label>\\n            <input type=\\\"text\\\" matInput formControlName=\\\"name\\\">\\n        </mat-form-field>\\n        \\n        <mat-form-field>\\n            <mat-label>Digite o email do usuário</mat-label>\\n            <input type=\\\"email\\\" matInput formControlName=\\\"email\\\">\\n        </mat-form-field>\\n        \\n        <mat-form-field>\\n            <mat-label>Digite a senha do usuário</mat-label>\\n            <input type=\\\"password\\\" matInput formControlName=\\\"password\\\">\\n        </mat-form-field>\\n    \\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!formG.valid || clicked\\\">{{ canEdit ? 'Editar' : 'Cadastrar' }}</button>\\n    </form>\\n    \\n    \\n</div>   \\n\"","export default \"<p>details-administrator works!</p>\\n\"","export default \"<div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center none\\\">\\n    <div fxFlex=\\\"95%\\\">\\n  \\n      <mat-card>\\n        <mat-card-content>\\n          <h2>Administradores</h2>\\n\\n          <mat-form-field>\\n            <mat-label>Filter</mat-label>\\n            <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Pesquisar por Administradores\\\">\\n          </mat-form-field>\\n  \\n          <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n  \\n            <!-- Position Column -->\\n            <ng-container matColumnDef=\\\"id\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> {{ user.id }} </td>\\n            </ng-container>\\n          \\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"name\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Nome </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> {{ user.name }} </td>\\n            </ng-container>\\n          \\n            <!-- Email Column -->\\n            <ng-container matColumnDef=\\\"email\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> {{ user.email }} </td>\\n            </ng-container>\\n          \\n            <!-- Status Column -->\\n            <ng-container matColumnDef=\\\"status\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> {{ user.status == 1 ? 'Ativo' : 'Inativo' }} </td>\\n            </ng-container>\\n            \\n            <!-- Icon Column -->\\n            <ng-container matColumnDef=\\\"icon\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>  </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> \\n                <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\" (click)=\\\"openModalCreate(user)\\\">edit</mat-icon>\\n                <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\" (click)=\\\"openModalDelete(user)\\\">delete</mat-icon>\\n              </td>\\n            </ng-container>\\n          \\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n          </table>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n          \\n        </mat-card-content>\\n      </mat-card>\\n  \\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"example-button-row\\\"> \\n    <button mat-fab color=\\\"primary\\\" aria-label=\\\"Example icon-button with a heart icon\\\" (click)=\\\"openModalCreate(null)\\\">\\n      <mat-icon>add</mat-icon>\\n    </button> \\n  </div>\"","import { Observable } from 'rxjs';\nimport { environment } from './../../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Administrator } from './../../interfaces/user/administrator';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdministratorService {\n\n  user: Administrator;\n  url: string = 'administrators';\n\n  constructor(private http: HttpClient) { }\n\n  getUsers(): Observable<Administrator[]> {\n    return this.http.get<Administrator[]>(environment.api + this.url);\n  }\n\n  addUser(user: Administrator) {\n    return this.http.post<Administrator>(environment.api + this.url, user);\n  }\n \n  updateUser(user: Administrator) {\n    return this.http.put<Administrator>(environment.api + this.url + `/${user.id}`, user);\n  }\n\n  deleteUser(user: Administrator) {\n    return this.http.delete<Administrator>(environment.api + this.url + `/${user.id}`);\n  }\n\n}\n","import { ListAdministratorsComponent } from './list-administrators/list-administrators.component';\nimport { LayoutComponent } from './../../shared/layout/layout.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutComponent,\n    children: [\n      {\n        path: '',\n        component: ListAdministratorsComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdministratorRoutingModule { }\n","import { ConfirmDialogComponent } from './../../shared/confirm-dialog/confirm-dialog.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdministratorRoutingModule } from './administrator-routing.module';\nimport { ListAdministratorsComponent } from './list-administrators/list-administrators.component';\nimport { DetailsAdministratorComponent } from './details-administrator/details-administrator.component';\nimport { CreateEditAdministratorComponent } from './create-edit-administrator/create-edit-administrator.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    ListAdministratorsComponent, \n    DetailsAdministratorComponent, \n    CreateEditAdministratorComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    AdministratorRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  entryComponents: [\n    CreateEditAdministratorComponent,\n    ConfirmDialogComponent\n  ]\n})\nexport class AdministratorModule { }\n","export default \"mat-form-field\\r\\n{\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\nh2\\r\\n{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\nbutton\\r\\n{\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvYWRtaW5pc3RyYXRvci9jcmVhdGUtZWRpdC1hZG1pbmlzdHJhdG9yL2NyZWF0ZS1lZGl0LWFkbWluaXN0cmF0b3IuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxXQUFXO0FBQ2Y7O0FBRUE7O0lBRUksa0JBQWtCO0FBQ3RCOztBQUVBOztJQUVJLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2FkbWluaXN0cmF0b3IvY3JlYXRlLWVkaXQtYWRtaW5pc3RyYXRvci9jcmVhdGUtZWRpdC1hZG1pbmlzdHJhdG9yLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZFxyXG57XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuaDJcclxue1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG5idXR0b25cclxue1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn0iXX0= */\"","import { MatDialogRef } from '@angular/material';\nimport { AdministratorService } from './../../../shared/services/users/administrator.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-edit-administrator',\n  templateUrl: './create-edit-administrator.component.html',\n  styleUrls: ['./create-edit-administrator.component.css']\n})\nexport class CreateEditAdministratorComponent implements OnInit {\n\n  formG: FormGroup;\n  clicked: boolean = false;\n  canEdit: boolean = false;\n\n  constructor(private fb: FormBuilder, private service: AdministratorService, public dialogRef: MatDialogRef<CreateEditAdministratorComponent>) { }\n\n  ngOnInit() {\n    this.initializeForm();\n    console.log(this.service.user.id)\n    if(this.service.user.id != undefined) {\n      this.setFormEdit();\n      this.canEdit = true;\n    } \n  }\n\n\n  initializeForm() {\n    this.formG = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n    })\n  }\n\n  setFormEdit() {\n    this.formG.get('name').setValue(this.service.user.name)\n    this.formG.get('email').setValue(this.service.user.email)\n    this.formG.get('email').disable({ onlySelf: true });\n    this.formG.get('password').setValidators(null);\n  }\n\n\n  submitForm() { \n    if(this.service.user.id == undefined) {\n      this.save();\n    } else {\n      this.edit();\n    }\n  }\n\n\n  save() {\n    this.clicked = true;\n    this.service.addUser(this.formG.value)\n      .subscribe(res => {\n        if(res['success']) { \n          this.dialogRef.close(true);\n          this.clicked = false;\n        }\n      })\n  }\n\n\n  edit() {\n    this.clicked = true;\n    this.formG.value['id'] = this.service.user.id;\n    this.service.updateUser(this.formG.value)\n      .subscribe(res => {\n        if(res['success']) { \n          this.dialogRef.close(true);\n          this.clicked = false;\n        }\n      })\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2FkbWluaXN0cmF0b3IvZGV0YWlscy1hZG1pbmlzdHJhdG9yL2RldGFpbHMtYWRtaW5pc3RyYXRvci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-details-administrator',\n  templateUrl: './details-administrator.component.html',\n  styleUrls: ['./details-administrator.component.css']\n})\nexport class DetailsAdministratorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"table {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\nth.mat-sort-header-sorted {\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\ntd, th {\\r\\n    width: 25%;\\r\\n}\\r\\n\\r\\n.mat-column-id\\r\\n{\\r\\n    width: 6%; \\r\\n}\\r\\n\\r\\n.mat-column-name\\r\\n{\\r\\n    width: 20%; \\r\\n}\\r\\n\\r\\n.mat-column-icon\\r\\n{\\r\\n    width: 10%; \\r\\n}\\r\\n\\r\\n.example-button-row button,\\r\\n.example-button-row a {\\r\\n    position: fixed;\\r\\n    bottom: 35px;\\r\\n    right: 2%;\\r\\n}\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvYWRtaW5pc3RyYXRvci9saXN0LWFkbWluaXN0cmF0b3JzL2xpc3QtYWRtaW5pc3RyYXRvcnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBR0E7SUFDSSxlQUFlO0lBQ2YsV0FBVztBQUNmOztBQUVBO0lBQ0ksVUFBVTtBQUNkOztBQUVBOztJQUVJLFNBQVM7QUFDYjs7QUFFQTs7SUFFSSxVQUFVO0FBQ2Q7O0FBRUE7O0lBRUksVUFBVTtBQUNkOztBQUVBOztJQUVJLGVBQWU7SUFDZixZQUFZO0lBQ1osU0FBUztBQUNiIiwiZmlsZSI6InNyYy9hcHAvdXNlcnMvYWRtaW5pc3RyYXRvci9saXN0LWFkbWluaXN0cmF0b3JzL2xpc3QtYWRtaW5pc3RyYXRvcnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcclxuICAgIGNvbG9yOiBibGFjaztcclxufVxyXG4gXHJcbiAgXHJcbi5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG4gIFxyXG50ZCwgdGgge1xyXG4gICAgd2lkdGg6IDI1JTtcclxufVxyXG5cclxuLm1hdC1jb2x1bW4taWRcclxue1xyXG4gICAgd2lkdGg6IDYlOyBcclxufVxyXG5cclxuLm1hdC1jb2x1bW4tbmFtZVxyXG57XHJcbiAgICB3aWR0aDogMjAlOyBcclxufVxyXG5cclxuLm1hdC1jb2x1bW4taWNvblxyXG57XHJcbiAgICB3aWR0aDogMTAlOyBcclxufVxyXG5cclxuLmV4YW1wbGUtYnV0dG9uLXJvdyBidXR0b24sXHJcbi5leGFtcGxlLWJ1dHRvbi1yb3cgYSB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBib3R0b206IDM1cHg7XHJcbiAgICByaWdodDogMiU7XHJcbn1cclxuICAiXX0= */\"","import { ConfirmDialogComponent } from './../../../shared/confirm-dialog/confirm-dialog.component';\nimport { CreateEditAdministratorComponent } from './../create-edit-administrator/create-edit-administrator.component';\nimport { Administrator } from './../../../shared/interfaces/user/administrator';\nimport { AdministratorService } from './../../../shared/services/users/administrator.service';\nimport { Title } from '@angular/platform-browser';\nimport { NotificationService } from './../../../core/services/notification.service';\nimport { NGXLogger } from 'ngx-logger';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatDialog } from '@angular/material';\n\n\n@Component({\n  selector: 'app-list-administrators',\n  templateUrl: './list-administrators.component.html',\n  styleUrls: ['./list-administrators.component.css']\n})\nexport class ListAdministratorsComponent implements OnInit {\n\n  displayedColumns: string[] = ['id', 'name', 'email', 'status', 'icon']; \n  dataSource: MatTableDataSource<Administrator>;\n\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator; \n\n  constructor(\n    private service: AdministratorService,\n    private logger: NGXLogger,\n    private notificationService: NotificationService,\n    private titleService: Title,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.titleService.setTitle('Stark - Administradores');\n    this.logger.log('Customers loaded'); \n    this.getUsers()\n  }\n\n  getUsers() {\n    this.service.getUsers()\n      .subscribe(res => {\n        this.dataSource = new MatTableDataSource(res) \n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n  }\n\n  openModalCreate(user: Administrator) {\n    this.service.user = Object.assign({}, user);\n    let dialogRef = this.dialog.open(CreateEditAdministratorComponent, {\n      height: '350px',\n      width: '600px',\n    });\n    dialogRef.afterClosed().subscribe(res => {\n      if(res) {\n        this.getUsers();\n      }\n    })\n  } \n\n\n  openModalDelete(user: Administrator) {\n    this.service.user = Object.assign({}, user);\n    let dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      height: '190px',\n      width: '450px',\n      data: {\n        title: 'Administrador'\n      }\n    });\n    dialogRef.afterClosed().subscribe(res => {\n      if(res) {\n        this.delete(); \n      }\n    })\n  }\n\n\n  delete() {\n    this.service.deleteUser(this.service.user)\n      .subscribe(res => {\n        if(res) {\n          this.delete(); \n          console.log(res)\n        }\n      })\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n}\n"],"sourceRoot":"webpack:///"}